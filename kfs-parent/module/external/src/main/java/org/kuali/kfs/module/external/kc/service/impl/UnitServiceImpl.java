/*
 * Copyright 2011 The Kuali Foundation.
 * 
 * Licensed under the Educational Community License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * http://www.opensource.org/licenses/ecl2.php
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package org.kuali.kfs.module.external.kc.service.impl;


import java.net.MalformedURLException;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import javax.xml.ws.WebServiceException;

import org.kuali.kfs.integration.cg.ContractsAndGrantsUnit;
import org.kuali.kfs.integration.cg.dto.HashMapElement;
import org.kuali.kfs.module.external.kc.KcConstants;
import org.kuali.kfs.module.external.kc.service.ExternalizableBusinessObjectService;
import org.kuali.kfs.module.external.kc.service.KfsService;
import org.kuali.kfs.module.external.kc.util.GlobalVariablesExtractHelper;
import org.kuali.kfs.module.external.kc.webService.InstitutionalUnitService;
import org.kuali.kfs.module.external.kc.webService.InstitutionalUnitSoapService;
import org.kuali.rice.kns.bo.ExternalizableBusinessObject;

/**
 * This class was generated by Apache CXF 2.2.10
 * Thu Sep 30 05:29:28 HST 2010
 * Generated source version: 2.2.10
 * 
 */
                      
public class UnitServiceImpl implements ExternalizableBusinessObjectService {
    protected static org.apache.log4j.Logger LOG = org.apache.log4j.Logger.getLogger(UnitServiceImpl.class);     
     
    protected InstitutionalUnitService getWebService() {
        InstitutionalUnitSoapService ss =  null;
        try {
            ss = new InstitutionalUnitSoapService();
        }
        catch (MalformedURLException ex) {
            LOG.error("Could not intialize InstitutionalUnitSoapService: " + ex.getMessage());
            throw new RuntimeException("Could not intialize InstitutionalUnitSoapService: " + ex.getMessage());
        }
        InstitutionalUnitService port = ss.getInstitutionalUnitServicePort(); 
        return port;
    }

    public ExternalizableBusinessObject findByPrimaryKey(Map primaryKeys) {
        ContractsAndGrantsUnit unitDTO  = this.getWebService().getUnit((String)primaryKeys.get("unitNumber"));
        return unitDTO;        
    }

    public Collection findMatching(Map fieldValues) {
        java.util.List <HashMapElement> hashMapList = new ArrayList<HashMapElement>();
        List lookupUnitsReturn = null;

        for (Iterator i = fieldValues.entrySet().iterator(); i.hasNext();) {
            Map.Entry e = (Map.Entry) i.next();

            String key = (String) e.getKey();
            String val = (String) e.getValue();

            if ( KcConstants.Unit.KC_ALLOWABLE_CRITERIA_PARAMETERS.contains(key)  && (val.length() > 0)) {
                HashMapElement hashMapElement = new HashMapElement();
                hashMapElement.setKey(key);
                hashMapElement.setValue(val); 
                hashMapList.add(hashMapElement);
            }
        }
        try {
          lookupUnitsReturn  = this.getWebService().lookupUnits( hashMapList);
        } catch (WebServiceException ex) {
            GlobalVariablesExtractHelper.insertError(KcConstants.WEBSERVICE_UNREACHABLE, KfsService.getWebServiceServerName());
        }
       
        if (lookupUnitsReturn == null) lookupUnitsReturn = new ArrayList();
        return lookupUnitsReturn;
    }

 }
