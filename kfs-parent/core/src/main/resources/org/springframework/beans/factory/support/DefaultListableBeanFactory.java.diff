--- DefaultListableBeanFactory-original-spring-2.5.6.txt	2011-05-18 15:44:24.000000000 -0700
+++ DefaultListableBeanFactory.java	2011-05-18 13:56:25.000000000 -0700
@@ -19,6 +19,7 @@
 import java.util.ArrayList;
 import java.util.Collection;
 import java.util.HashMap;
+import java.util.HashSet;
 import java.util.Iterator;
 import java.util.LinkedHashMap;
 import java.util.List;
@@ -92,6 +93,7 @@
 
 	/** Map of bean definition objects, keyed by bean name */
 	private final Map beanDefinitionMap = CollectionFactory.createConcurrentMapIfPossible(16);
+    private final Map<String,Set<String>> beanDefinitionsByParent = CollectionFactory.createConcurrentMapIfPossible(16);
 
 	/** List of bean definition names, in registration order */
 	private final List beanDefinitionNames = new ArrayList();
@@ -434,6 +436,15 @@
 	}
 
 
+    protected void addBeanToParentMap( String parentName, String beanName ) {
+        Set<String> defs = beanDefinitionsByParent.get(parentName);
+        if ( defs == null ) {
+            defs = new HashSet<String>();
+            beanDefinitionsByParent.put(parentName, defs);
+        }
+        defs.add(beanName);
+    }
+
 	//---------------------------------------------------------------------
 	// Implementation of BeanDefinitionRegistry interface
 	//---------------------------------------------------------------------
@@ -474,6 +485,9 @@
 				this.frozenBeanDefinitionNames = null;
 			}
 			this.beanDefinitionMap.put(beanName, beanDefinition);
+            if ( StringUtils.hasText( beanDefinition.getParentName() ) ) {
+                addBeanToParentMap(beanDefinition.getParentName(), beanName);
+            }
 
 			resetBeanDefinition(beanName);
 		}
@@ -492,6 +506,12 @@
 			}
 			this.beanDefinitionNames.remove(beanName);
 			this.frozenBeanDefinitionNames = null;
+            // Pull it out of the parent map
+            if ( StringUtils.hasText( bd.getParentName() ) ) {
+                if ( beanDefinitionsByParent.get(bd.getParentName()) != null ) {
+                    beanDefinitionsByParent.get(bd.getParentName()).remove(beanName);
+                }
+            }
 
 			resetBeanDefinition(beanName);
 		}
@@ -515,13 +535,10 @@
 
 		// Reset all bean definitions that have the given bean as parent
 		// (recursively).
-		for (Iterator it = this.beanDefinitionNames.iterator(); it.hasNext();) {
-			String bdName = (String) it.next();
-			if (!beanName.equals(bdName)) {
-				BeanDefinition bd = (BeanDefinition) this.beanDefinitionMap.get(bdName);
-				if (beanName.equals(bd.getParentName())) {
-					resetBeanDefinition(bdName);
-				}
+        Set<String> childBeans = beanDefinitionsByParent.get(beanName);
+        if ( childBeans != null ) {
+            for ( String childBeanName : childBeans ) {
+                resetBeanDefinition(childBeanName);
 			}
 		}
 	}
