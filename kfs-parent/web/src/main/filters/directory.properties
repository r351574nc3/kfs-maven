#############################
##  Base Directories 
##     You will want to customize these in your kfs-build.properties file to
##     match your environment.
#############################

# These are the base directories you may want to configure for your development environment
base.directory=/java

# determines where the build will look for your tomcat application server
appserver.home=${basedir}/build/tomcat

# the base directory for external configuration files and work directories
external.config.directory=${base.directory}/opt

#############################
##  Derived Directory Paths 
##     These should probably not be changed, as they represent standard directory 
##     structures under the base directories.
#############################

# Application server directories - these assume the Tomcat 6.0 structure
tomcat.version=6
#appserver.lib.dir=${appserver.home}/lib
#appserver.classes.dir=${appserver.home}/lib
appserver.deploy.dir=${appserver.home}/webapps
appserver.config.dir=${appserver.home}/conf
appserver.localhost.dir=${appserver.config.dir}/Catalina/localhost
appserver.work.dir=${appserver.home}/work/Catalina/localhost

# work directory and subdirs
work.directory=work
source.directory=${work.directory}/src
database.directory=${work.directory}/db
webroot.directory=${work.directory}/web-root
webinf.directory=${webroot.directory}/WEB-INF
tags.directory=${webinf.directory}/tags
classes.directory=${webinf.directory}/classes
lib.directory=${webinf.directory}/lib
metainf.directory=${webroot.directory}/META-INF
static.directory=${webroot.directory}/static
help.directory=${static.directory}/help
xsd.directory=${static.directory}/xsd

test.infrastructure.source.directory=test/infrastructure/src
test.unit.source.directory=test/unit/src
test.integration.source.directory=test/integration/src
test.lib.directory=test/lib

# derived directories within the "/opt" directory
base.security.directory=${external.config.directory}/sa_forms/java
base.settings.directory=${external.config.directory}/j2ee
base.logs.directory=${external.config.directory}/logs
base.work.directory=${external.config.directory}/work
base.deploy.directory=${external.config.directory}/ears

security.directory=${base.security.directory}/${build.environment}/${ant.project.name}
# the directory that contains the non-secure property files that are nonetheless external to the deployed application
settings.directory=${base.settings.directory}/${build.environment}/${ant.project.name}
# used as the working deployment directory by the dist target
deploy.working.directory=${base.deploy.directory}/${build.environment}/${ant.project.name}
# the directory containing the log files output by the application
logs.directory=${base.logs.directory}/${build.environment}/${ant.project.name}
# the working directory that is external to the application
external.work.directory=${base.work.directory}/${build.environment}/${ant.project.name}
# the base working directory for storage of note-associated attachments that are uploaded by users
attachments.directory=${external.work.directory}/attachments
# the base working directory for storage of batch input files
staging.directory=${external.work.directory}/staging
# a directory for temporary file storage, e.g. during pdf generation
temp.directory=${external.work.directory}/temp
# the base working directory for oltp and batch report generation
reports.directory=${external.work.directory}/reports

# Build support file directories and subdirectories
build.directory=build
build.external.directory=${build.directory}/external
build.appserver.directory=${build.external.directory}/appserver
build.user.directory=${build.external.directory}/user
build.work.directory=${build.external.directory}/work
build.project.directory=${build.directory}/project
licenses.directory=licenses
build.distribution.directory=${build.directory}/distribution
build.distribution.licenses.directory=${build.distribution.directory}/${licenses.directory}
build.server.lib.directory=${build.directory}/server-lib
build.rice.lib.directory=${build.directory}/rice-lib
build.kfs.lib.directory=${build.directory}/kfs-lib

# determines where the build will look for your database drivers
drivers.directory=${build.directory}/drivers

all.temp.directory=${build.directory}/temp
war.directory=${build.directory}/war
war.classes.directory=${war.directory}/WEB-INF/classes

# Testing directories
test.directory=${build.directory}/test
test.classes.directory=${test.directory}/classes
test.xml.results.directory=${test.directory}/xml

deployDir=${build.directory}
test.html.results.directory=${deployDir}/test
doc.directory=${build.directory}/doc
dddoc.directory=${build.directory}/doc-dd-tags

# files

context.file=context.xml
carol.file=carol.properties
security.file=security.properties
keystore.filename=rice.keystore
configuration.file=configuration.properties
p6spy.file=spy.properties
web.file=web.xml
spring.ide.support.file=.springBeans
ojb.properties.file=OJB.properties
ojb.logging.file=OJB-logging.properties
ojb.repository.file=OJB-repository.xml
# the file that lists the tables and columns that should be processed by the PostDataLoadEncryptionStep
encrypt.attributes.properties.file=fieldsToEncrypt.properties

# the single secure property file currently used by the application
security.property.file=${security.directory}/${security.file}
# the single keystore file currently used by the KSB to authenticate services
keystore.file=${security.directory}/${keystore.filename}

