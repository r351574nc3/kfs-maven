# Web Authentication

# for development efficiency, this property will deploy rice cas locally
deploy.local.cas.server=true

# the value of this property will be included in the filter section of web.xml
authentication.filter.definition=<filter>\
\n\t\t<filter-name>CAS Authentication Filter</filter-name>\
\n\t\t<filter-class>org.jasig.cas.client.authentication.AuthenticationFilter</filter-class>\
\n\t\t<init-param>\
\n\t\t\t<param-name>casServerLoginUrl</param-name>\
\n\t\t\t<param-value>${cas.url}/login</param-value>\
\n\t\t</init-param>\
\n\t\t<init-param>\
\n\t\t\t<param-name>serverName</param-name>\
\n\t\t\t<param-value>${appserver.url}</param-value>\
\n\t\t</init-param>\
\n\t</filter>\
\n\t<filter>\
\n\t\t<filter-name>CAS Validation Filter</filter-name>\
\n\t\t<filter-class>org.jasig.cas.client.validation.Cas20ProxyReceivingTicketValidationFilter</filter-class>\
\n\t\t<init-param>\
\n\t\t\t<param-name>casServerUrlPrefix</param-name>\
\n\t\t\t<param-value>${cas.url}</param-value>\
\n\t\t</init-param>\
\n\t\t<init-param>\
\n\t\t\t<param-name>serverName</param-name>\
\n\t\t\t<param-value>${appserver.url}</param-value>\
\n\t\t</init-param>\
\n\t</filter>\
\n\t<filter>\
\n\t\t<filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>\
\n\t\t<filter-class>org.jasig.cas.client.util.HttpServletRequestWrapperFilter</filter-class>\
\n\t</filter>
# the value of this property will be included in the filter mapping section of web.xml
authentication.filter.mappings=<filter-mapping>\
\n\t\t<filter-name>CAS Authentication Filter</filter-name>\
\n\t\t\t<servlet-name>action</servlet-name>\
\n\t\t</filter-mapping>\
\n\t\t<filter-mapping>\
\n\t\t\t<filter-name>CAS Validation Filter</filter-name>\
\n\t\t\t<servlet-name>action</servlet-name>\
\n\t\t</filter-mapping>\
\n\t\t<filter-mapping>\
\n\t\t\t<filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>\
\n\t\t\t<servlet-name>action</servlet-name>\
\n\t\t</filter-mapping>\
\n\t\t<filter-mapping>\
\n\t\t\t<filter-name>CAS Authentication Filter</filter-name>\
\n\t\t\t<servlet-name>dwr-invoker</servlet-name>\
\n\t\t</filter-mapping>\
\n\t\t<filter-mapping>\
\n\t\t\t<filter-name>CAS Validation Filter</filter-name>\
\n\t\t\t<servlet-name>dwr-invoker</servlet-name>\
\n\t\t</filter-mapping>\
\n\t\t<filter-mapping>\
\n\t\t\t<filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>\
\n\t\t\t<servlet-name>dwr-invoker</servlet-name>\
\n\t\t</filter-mapping>\
\n\t\t<filter-mapping>\
\n\t\t\t<filter-name>CAS Authentication Filter</filter-name>\
\n\t\t\t<servlet-name>batchFileUpload</servlet-name>\
\n\t\t</filter-mapping>\
\n\t\t<filter-mapping>\
\n\t\t\t<filter-name>CAS Validation Filter</filter-name>\
\n\t\t\t<servlet-name>batchFileUpload</servlet-name>\
\n\t\t</filter-mapping>\
\n\t\t<filter-mapping>\
\n\t\t\t<filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>\
\n\t\t\t<servlet-name>batchFileUpload</servlet-name>\
\n\t\t</filter-mapping>



# the following 6 properties are only used when cas is deployed locally
cas.context.name=cas
cas.context.file=context-cas.xml

# datasource information for the built-in CAS server which uses the KIM KRIM_PRNCPL_T table.
cas.datasource.username=${datasource.username}
cas.datasource.password=${datasource.password}
# the datasource URL and driver are set dynamically in build.xml
#cas.datasource.url=${datasource.url}
#cas.datasource.driver.class=${datasource.driver.class}

# determines whether cas requires that the application be secured via ssl
cas.require.https=false
# determines whether the password field appears on the cas login screen and is validated
cas.validate.password=false
